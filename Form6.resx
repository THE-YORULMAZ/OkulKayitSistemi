<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>